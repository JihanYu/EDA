swirl()
students3
submit()
submit()
"A":"E"
submit()
submit()
?spread()
?spread
?spread
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(swirl)
swirl()
str(mpg)
plot(disp, hwy, data=mpg)
plot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, aes(col=drv))
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv) + geom(point, smooth)
qplot(displ, hwy, data=mpg, color=drv, geom(c("point", "smooth")))
library(ggplot2)
qplot(displ, hwy, data=mpg, color=drv, geom=c("point", "smooth"))
qplot(y=hwy, data=mpg, color=drv)
qplot(y=hwy, data=mpg, color=drv)
myhigh
qplot(drv, hwy, data=mpg, geom=c("boxplot"))
qplot(drv, hwy, data=mpg, geom="boxplot")
qplot(drv, hwy, data=mpg, geom="boxplot", color=manufacturer)
qplot(hwy, data=mpg, aes=drv)
qplot(hwy, data=mpg, aes="drv")
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, facets=.~drv)
qplot(displ, hwy, data=mpg, bindwidth=2)
qplot(displ, hwy, data=mpg, facets=drv~., bindwidth=2)
qplot(hwy, data=mpg, facets=drv ~., binwidth=2)
qplot(displ, hwy, data=mpg, geom=c("point", "smooth"), facet=.~drv)
qplot(displ, hwy, data=mpg, geom=c("point", "smooth"), facets=.~drv)
ggplot(data=mpg, displ, hwy)
ggplot(displ, hwy, data=mpg)
g <- ggplot(displ, hwy, data=mpg)
?mpg
g <- qplot(displ, hwy, data=mpg)
g <- ggplot(mpg, aes(displ, hwy))
g
summary(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(lm)
g + geom_point() + geom_smooth(method="lm")
g + geom_point() + geom_smooth(method="facet_grid")
g + geom_point() + geom_smooth(method="lm") + facet_grid(.~drv)
g + geom_point() + geom_smooth(method="lm") + facet_grid(.~drv) + xlab()
g + geom_point() + geom_smooth(method="lm") + facet_grid(.~drv) + lab()
g + geom_point() + geom_smooth(method="lm") + facet_grid(.~drv) + ggtitle("Swirl Rules!")
g + geom_point(color="pink", size=4, alpha=1/2)
g + geom_point(size=4, alpha=1/2, aes=(color=drv))
g + geom_point(size=4, alpha=1/2, aes=(color="drv"))
g + geom_point(aes(color=drv), size=4, alpha=1.2)
g + geom_point(aes(color=drv), size=4, alpha=1/2)
g + geom_point(aes(color=drv), size=4, alpha=1/2)
g + geom_point(aes(color=drv)) + labs(title="Swirl Rules!") + labs(x="Displacement, y="Hwy Mileage"")
g + geom_point(aes(color=drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(color=drv, size=2, alpha=1/2) + geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g + geom_point(aes(color=drv), size=2, alpha=1/2) + geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
theme_bw
g + geom_point(aes(color=drv)) + theme_bw(base_family="Times")
plot()
myx
plot(myx, myy, type="l", ylim=c(-3,3))
g + ggplot(x=myx, y=myy)
g + ggplot(aes(x=myx, y=myy))
g + ggplot(testdata, aes(x=myx, y=myy))
g + ggplot(testdat, aes(x=myx, y=myy))
g + ggplot(data = testdat, aes(x=myx, y=myy))
library(ggplot2)
g <- ggplot(testdat, aes(x=myx, y=myy))
g + geom_line()
g + geom_line(ylim=c(-3,3))
g + geom_line() + ylim(-3,3)
g + geom_line + coord_cartesian(ylim=c(-3,3))
g + geom_line + coord_cartesian() + ylim(-3,3)
g + geom_line() + coord_cartesian() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim=c(-3,3))
g <- ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g
g + geom_point()
facet_grid(drv~cyl, margins=TRUE)
g + geom_point() = facet_grid(drv~cyl, margins=TRUE)
g + geom_point() + facet_grid(drv~cyl, margins=TRUE)
g + geom_point() + facet_grid(drv~cyl, margins=TRUE) + geom_smooth(method="lm", se=FALSE, size=2, color="black")
g + geom_point() + facet_grid(drv~cyl, margins=TRUE) + geom_smooth(method="lm", se=FALSE, size=2, color="black") + title(x=Displacement", y="Highway Mileage)
g + geom_point() + facet_grid(drv~cyl, margins=TRUE) + geom_smooth(method="lm", se=FALSE, size=2, color="black") + labs(x="Displacement", y="Highway Mileage", title="Swirl Rules!")
str(diamonds)
qplot(price, data=diamonds) + geom_hist()
qplot(price, data=diamonds) + geom_histogram()
qplot(price, data=diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price, data=diamonds, bindwidth=18497/30)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30)
qplot(price, data=diamonds, binwidth=18497/30, fill=cut)
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density", color=cut)
qplot(price, data=diamonds)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, shape=cut, color=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat, price, data=diamonds, color=cut, facets=.~cut) + geom_smooth(method="lm")
g <- ggplot(diamonds, depth, price)
g <- ggplot(diamonds, aes(depth, price))
g
summary(g)
g + geom_point(alpha=1/3)
quantile(diamonds$carat, seq(0, 1, length=4), na.rm=TRUE)
cutpoints <- quantile(diamonds$carat, seq(0, 1, length=4), na.rm=TRUE)
cutpoints
quantile()
diamonds$car2 <- quantile(diamonds$carat)
diamonds$car2 <- quantile(diamonds$carat, cutpoints)
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot2(diamonds, aes(depth, price))
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha=1/3) + facet_grid(cut~car2)
myd
diamonds[myd,]
g + geom_point(alpha=1/3) + facet_grid(cut~car2)
g + geom_point(alpha=1/3) + facet_grid(cut~car2) + geom_smooth(method="lm", size=3, color="pink")
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(.~cut)
dist(dataFrame)
hs <- hclust(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendogram(hc))
as.dendogram(hs)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
cut(dendrogram)
cut(as.dendrogram(hc))
abline(h=4, color="red")
abline(h=4, col="red")
abline(h=4, col="red")
abline(h=.4, col="red")
5
abline(h=0.05)
5
4
5
9
10
11
12
abline(h=0.05)
dFsm
dist(Fsm)
dist(dFsm)
hc
heatmap
heatmap(dataMatrix, col=cm.colors(25))
mtcars
heatmap(mt)
disparity
color()
heatmap(disparity)
heatmap(mt)
mt
heatmap(denmt)
dentmt
denmt <- hclust(mt)
plot(disp, hp)
plot(disp, hp, data=mt)
mt
plot(disp, hp, data=mt)
plot(denmt)
distmt
cmat
plot(cx, cy, col=c("red", "orange", "purple"))
points(cx, cy, col=c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
mdist
mdist(x, y, cx, cy)
distTmp
apply(distTmp, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(x, y, pch=8, cex=2, col=cols1[newClust], lwd=2)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
y
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=col1, pch=9, cex=2, lwd=2)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, center=3)
kmObj$iter
plot(x, y, col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col=c("black", "red", "green"), pch=3, cex=3, lwd=3)
plot(x, y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
head(dataMatrix)
heatmap(dataMatrix)
addPatt.R(myedit)
myedit
myedit("addPatt.R")
course("addPatt.R", local=TRUE)
s]ourse("addPatt.R", local=TRUE)
sourse("addPatt.R", local=TRUE)
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd
svd(mat)
t(matv)
matu %*% diag %*% t(matv)
svd(mat)
svd(scale(mat))
scale(mat)
prcomp(scale(mat))
svd1$v[,1]
t(svd1$d)
svd1$d
constantMatrix
head(constantMatrix)
svd2
svd2$d
svd2
svd2$v[,1:2]
svd2
svd2$d
dim(faceData)
svd1$u[,1] * svd1$d[,1]
svd1$u[,1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage
myImage(a1)
svd1$d[1:2]
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[, 1:5]))
myImage(a2)
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[, 1:10]))
dim(ssd)
names(ssd)
namds(ssd[562:"563"
])
names(ssd[562:"563"
])
names(ssd[562:563])
ssd$subject
table(ssd$subject)
table(ssd$subject)
sum(table(ssd$subject))
ssd$activity
table(ssd$activity)
subset(ssd, subject==1)
sub1 <- subset(ssd, subject==1)
sub1
dim(sub1)
names(sub1[, 1:12])
myedit("showXY.R")
showMe()
showMe(sub1[, 1:12])
showMe(1:6)
dist(mdist[, 1:3])
mdist
mdist <- dist(sub1[, 1:3])
hclust
hclustering <- hclust(mdist)
unclass(sub1$activity)
myplclust((hclustering, lab.col=unclass(sub1$activity)))
myplclust(hclustering, lab.col=unclass(sub1$activity))
dist(sub1$x[,10:12])
dist(mdist, sub1[, 10:12])
dist
mdist <- dist(sub1[, 10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
svd()
svd(scale(sub1[, -c(562, 563)]))
svd1 <- svd(scale(sub1[, -c(562, 563)]))
dim(svd1$y)
dim(svd1$u)
which.max(maxCon, svd1$v)
which.max
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[, 10:12])
mdist <- dist(sub1[, c(10:12, maxCon)])
hclust(mdist)
hclustering <- hclust(mdist)
mypclust(hclustering, lab.col=unclass(sub1$activity))
myplclust(hclustering, lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1, centers=6)
kClust <- kmeans(sub1[, 10:12], centers=6)
kClust <- kmeans(sub1[, -c(562, 563)], centers=6)
table(kCluster$cluster, sub1$activity)
table(kClust$cluster, sub1$activity)
table(kClust$cluster, sub1$activity, nstart=100)
kClust <- kmeans(sub1[, -c(562, 563)], centers=6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(kClust)
dim(kCluster$centers)
dim(kClust$centers)
which(kClust$size==29)
laying <- which(kClust$size==29)
plot(kClust$centers[laying, 1:12], pch=19, ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12], pch=19, ylab="walkdown Cluster")
plot(kClust$centers[walkdown, 1:12], pch=19, ylab="Walkdown Cluster")
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, sep="|", fixed=TRUE)
cnames <- strsplit(cnames, "|", fixed=TRUE)
cnames
names(pm0)
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
pm0
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0), na.rm=TRUE)
mean(is.na(x0))
names(pm1) <- make.names(cnmaes[[1]][wcol])
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1 < 0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dats)
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code==36 & county.site %in% vector())
cnt0 <- subset(pm0, State.Code==36 & county.site %in% both
)
cnt1 <- subset(pm1, State.Code==36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code==63)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mar=c(4,4,2,1))
par(mfrow=c(1,2), mar=c(4,4,2,1))
plot(dates0, x0sub, pch=20)
abline(h=median(pm25), lwd=2)
abline(h=median(x0sub), lwd=2, na.rm=TRUE)
abline(h=median(x0sub, na.rm=TRUE), lwd=2)
plot(dates1, x1sub, pch=20)
abline(h=median(x1sub, na.rm=TRUE), lwd=2)
rng <- range(x0sub, x1sub, na.rm=TRUE)
rng
mn0 <-
)
mn0 <- tapply(pm0, Sample.Value, State.Code)
om0
pm0
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn0)
mn0
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(mn0), mean=mn0)
d1 <- data.frame(state=names(mn1), mean=mn1)
mrg <- merge(d0, d1, set="state")
mrg <- merge(d0, d1, by="state")
dim(mrg)
mrg
head(mrg)
with (mrg, plot(rep(1, 52), mrg[,2], xlim=c(.5, 2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
points(x, y)
points(x=2)
segments(rep(1, 52), mrg[,2], rep(2, 52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y,]
workingpath <- "C:\\Users\\pc\\Desktop\\Jihan\\EDA"
setwd(workingpath)
NEI <- readRDS("./data/summarySCC_PM25.rds")
SCC <- readRDS("./data/Source_Classification_Code.rds")
NEI$fips <- as.numeric(NEI$fips)
NEI$Pollutant <- as.factor(NEI$Pollutant)
NEI$type <- as.factor(NEI$type)
NEI$year <- as.factor(NEI$year)
library(dplyr)
NEI.tot <- NEI %>%
group_by(year) %>%
summarize(Emi.Tot = sum(Emissions))
with(NEI.tot, plot(year, Emi.Tot, type="l"))
barplot(Emi.Tot ~ year, data=NEI.tot)
workingpath <- "C:\\Users\\MED1\\Desktop\\Coursera\\project"
#workingpath <- "C:\\Users\\pc\\Desktop\\Jihan\\EDA"
setwd(workingpath)
NEI <- readRDS("./data/summarySCC_PM25.rds")
SCC <- readRDS("./data/Source_Classification_Code.rds")
NEI$fips <- as.numeric(NEI$fips)
NEI$Pollutant <- as.factor(NEI$Pollutant)
NEI$type <- as.factor(NEI$type)
NEI$year <- as.factor(NEI$year)
library(dplyr)
NEI.tot <- NEI %>%
group_by(year) %>%
summarize(Emi.Tot = sum(Emissions))
with(NEI.tot, plot(year, Emi.Tot, type="l"))
barplot(Emi.Tot ~ year, data=NEI.tot)
barplot(Emi.Tot ~ year, data=NEI.tot, xlab="Year", ylab="total emissions")
?barplot
barplot(Emi.Tot ~ year, data=NEI.tot, width=0.5, xlab="Year", ylab="total emissions")
?png
NEI.tot <- NEI %>%
group_by(year) %>%
summarize(Emi.Tot = sum(Emissions))
png(filename = "plot1.png")
barplot(Emi.Tot ~ year, data=NEI.tot, width=0.5,
xlab="Year", ylab="total emissions", main="Total PM2.5 in US")
dev.off()
with(NEI.tot, plot(year, Emi.Tot, type="l"))
NEI.BT <- subset(NEI, fips=="24510")
workingpath <- "C:\\Users\\MED1\\Desktop\\Coursera\\project"
#workingpath <- "C:\\Users\\pc\\Desktop\\Jihan\\EDA"
setwd(workingpath)
NEI <- readRDS("./data/summarySCC_PM25.rds")
SCC <- readRDS("./data/Source_Classification_Code.rds")
NEI$Pollutant <- as.factor(NEI$Pollutant)
NEI$type <- as.factor(NEI$type)
NEI$year <- as.factor(NEI$year)
NEI.BT <- subset(NEI, fips=="24510")
library(dplyr)
NEI.BT.tot <- NEI.BT %>%
group_by(year) %>%
summarize(Emi.Tot = sum(Emissions))
png(filename = "plot1.png")
barplot(Emi.Tot ~ year, data=NEI.BT.tot,
xlab="Year", ylab="total emissions", main="Total PM2.5 in Baltimore City")
dev.off()
workingpath <- "C:\\Users\\MED1\\Desktop\\Coursera\\project"
#workingpath <- "C:\\Users\\pc\\Desktop\\Jihan\\EDA"
setwd(workingpath)
NEI <- readRDS("./data/summarySCC_PM25.rds")
SCC <- readRDS("./data/Source_Classification_Code.rds")
NEI$Pollutant <- as.factor(NEI$Pollutant)
NEI$type <- as.factor(NEI$type)
NEI$year <- as.factor(NEI$year)
library(dplyr)
NEI.tot <- NEI %>%
group_by(year) %>%
summarize(Emi.Tot = sum(Emissions))
png(filename = "plot1.png")
barplot(Emi.Tot ~ year, data=NEI.tot, width=0.5,
xlab="Year", ylab="total emissions", main="Total PM2.5 in US")
dev.off()
NEI.BT <- subset(NEI, fips=="24510")
library(dplyr)
NEI.BT.tot <- NEI.BT %>%
group_by(year) %>%
summarize(Emi.Tot = sum(Emissions))
png(filename = "plot2.png")
barplot(Emi.Tot ~ year, data=NEI.BT.tot,
xlab="Year", ylab="total emissions", main="Total PM2.5 in Baltimore City")
dev.off()
head(NEI)
str(NEI)
NEI.BT.tot <- NEI.BT %>%
group_by(year, type) %>%
summarize(Emi.Tot = sum(Emissions))
NEI.BT.tot
library(dplyr);  library(ggplot2)
NEI.BT.type.tot <- NEI %>%
group_by(year, type) %>%
summarize(Emi.Tot = sum(Emissions))
#png(filename = "plot3.png")
ggplot(data=NEI.BT.type.tot, aes(x=year, y=Emi.Tot, group=type, color=type)) +
geom_line()
table(NEI.BT.type.tot)
